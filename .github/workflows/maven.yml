# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    # 设置maven 仓库缓存 避免每次构建时都重新下载依赖
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  junit:
    strategy:
      matrix:
        # 指定jdk 版本。可以指定多个版本 比如[8,11,17]
        java: [8]
        # 指定运行 os 版本 也是多个
        os: [ 'ubuntu-latest' ]
    # 运行环境，这里就是上面定义的多个 os
    runs-on: ${{ matrix.os }}

    steps:
      # 将job的工作目录指向$GITHUB_WORSPACES checkout@v2比较旧不推荐使用
      - name: Checkout codes
        uses: actions/checkout@v3
      # 设置jdk环境
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      # 设置maven 仓库缓存 避免每次构建时都重新下载依赖
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test with Maven
        run: mvn clean test -B -U
